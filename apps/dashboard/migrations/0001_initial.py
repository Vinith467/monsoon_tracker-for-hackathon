# Generated by Django 4.2.7 on 2025-09-26 06:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AirQualityData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("aqi", models.IntegerField()),
                ("pm25", models.FloatField(blank=True, null=True)),
                ("pm10", models.FloatField(blank=True, null=True)),
                ("o3", models.FloatField(blank=True, null=True)),
                ("no2", models.FloatField(blank=True, null=True)),
                ("so2", models.FloatField(blank=True, null=True)),
                ("co", models.FloatField(blank=True, null=True)),
                ("recorded_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={"ordering": ["-recorded_at"],},
        ),
        migrations.CreateModel(
            name="EcoTip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("rainwater", "Rainwater Harvesting"),
                            ("pollution", "Pollution Reduction"),
                            ("water_conservation", "Water Conservation"),
                            ("air_quality", "Air Quality Improvement"),
                            ("monsoon_safety", "Monsoon Safety"),
                        ],
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="WaterLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location_name", models.CharField(max_length=200)),
                ("city", models.CharField(max_length=100)),
                (
                    "water_body_type",
                    models.CharField(
                        choices=[
                            ("river", "River"),
                            ("lake", "Lake"),
                            ("dam", "Dam"),
                            ("reservoir", "Reservoir"),
                        ],
                        max_length=50,
                    ),
                ),
                ("current_level", models.FloatField()),
                ("normal_level", models.FloatField()),
                ("warning_level", models.FloatField()),
                ("danger_level", models.FloatField()),
                (
                    "alert_status",
                    models.CharField(
                        choices=[
                            ("normal", "Normal"),
                            ("warning", "Warning"),
                            ("danger", "Danger"),
                            ("critical", "Critical"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="WeatherData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("temperature", models.FloatField()),
                ("humidity", models.FloatField()),
                ("pressure", models.FloatField()),
                ("rainfall", models.FloatField(default=0.0)),
                ("wind_speed", models.FloatField()),
                ("weather_description", models.CharField(max_length=200)),
                ("recorded_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={"ordering": ["-recorded_at"],},
        ),
        migrations.CreateModel(
            name="UserAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("weather", "Weather Alert"),
                            ("air_quality", "Air Quality Alert"),
                            ("water_level", "Water Level Alert"),
                        ],
                        max_length=50,
                    ),
                ),
                ("message", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("danger", "Danger"),
                        ],
                        default="info",
                        max_length=20,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ["-created_at"],},
        ),
    ]
